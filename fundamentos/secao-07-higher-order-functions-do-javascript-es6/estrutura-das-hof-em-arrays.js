/*
Ao manipular arrays, temos HOFs nativas do JavaScript que 
iteram pelo array e executam uma determinada a√ß√£o para cada 
elemento do array, como:

  ‚Ä¢ forEach: executa uma a√ß√£o determinada por voc√™ para cada 
  item do array e n√£o possui retorno;

  ‚Ä¢ find: encontra o primeiro elemento que satisfa√ßa 
  alguma condi√ß√£o;

  ‚Ä¢ some: retorna true se algum elemento satisfaz alguma 
  condi√ß√£o, caso contr√°rio retorna false;

  ‚Ä¢ every: retorna true se todos os elementos corresponderem a 
  uma condi√ß√£o, caso contr√°rio retorna false.
*/

//A primeira parte de uma HOF √© o array a ser iterado e a HOF a ser executada. Por exemplo:

//array.hofASerExecutada();

/*
A HOF recebe como par√¢metro uma fun√ß√£o callback.

  Anota a√≠ üìù: uma fun√ß√£o callback √© uma fun√ß√£o passada por 
  par√¢metro ou executada dentro de outra fun√ß√£o.

Nesse caso, vamos passar uma fun√ß√£o an√¥nima:
(üìù: uma fun√ß√£o an√¥nima nada mais √© do que uma fun√ß√£o sem nome.)
*/

//array.hofASerExecutada(() => {});

/*
 A fun√ß√£o an√¥nima que foi passada por par√¢metro pode receber at√© tr√™s par√¢metros:

  ‚Ä¢ o primeiro par√¢metro √© o elemento a ser iterado e √© o 
  √∫nico obrigat√≥rio;

  ‚Ä¢ o segundo par√¢metro √© o index do elemento atual;

  ‚Ä¢ o terceiro par√¢metro √© o array original e n√£o √© muito 
  comum utiliz√°-lo.
*/

//array.hofASerExecutada((elementoAtual, index, arrayOriginal) => {});

/*


O c√≥digo a ser executado vai depender da funcionalidade da HOF.

Por exemplo, o forEach executa uma determinada a√ß√£o para cada 
item do array e n√£o retorna nada.

A estrutura dele √© a seguinte:
*/

/*
array.forEach((element, index) => {
  // c√≥digo a ser executado
});
*/

/*
O c√≥digo abaixo possui um array com diversos valores. 

Observe e execute o c√≥digo:
*/

/*
const arrayOfValues = ['jos√©', 50, 0.25, { comida: 'Chocolate' }];

arrayOfValues.forEach((element, index) => {
  console.log(`O elemento atual √©: ${element} e possui o index: ${index}`);
});
*/

/*
O c√≥digo acima est√° organizado da seguinte maneira:

  ‚Ä¢ arrayOfValues: nome do array que ser√° percorrido;
  ‚Ä¢ .forEach: a HOF usada. Poderia ser outra HOF, como .find, .some, .every, entre outras, que a estrutura seria a mesma;
  ‚Ä¢ element: valor do elemento do array;
(element, index) => { c√≥digo }: fun√ß√£o a ser executada.
*/