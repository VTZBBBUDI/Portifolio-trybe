/*
Imagine que voc√™ est√° desenvolvendo um site para um supermercado e j√° fez todo o front-end, 
com a parte estrutural (html) e de estiliza√ß√£o (css).

O que falta agora √© pedir algum servidor para trazer os produtos que ir√£o aparecer,
uma vez que essas informa√ß√µes n√£o s√£o salvas no front de uma aplica√ß√£o.
*/

/*
Agora vamos imaginar outra situa√ß√£o‚Ä¶ voc√™ est√° desenvolvendo um back-end de uma empresa de meteorologia. 
Atualmente voc√™ est√° trabalhando em um servi√ßo que entrega informa√ß√µes de clima de todas as cidades do Brasil.
Se algum site pedir essas informa√ß√µes, em qual formato voc√™ entregaria esses dados?
*/

/*
JSON √© a sigla para JavaScript Object Notation
(Nota√ß√£o de Objeto em Javascript, em tradu√ß√£o livre) 
e foi idealizado justamente para resolver esse problema de padroniza√ß√£o de comunica√ß√£o entre sistemas web, 
trazendo mais simplicidade e leveza na utiliza√ß√£o.
*/

/*
Qual a sintaxe do JSON?
  A sintaxe do JSON √© semelhante √† do objeto em JavaScript, mas √© independente de linguagem,
  o que significa que pode ser usado com qualquer linguagem de programa√ß√£o. 
  O formato √© baseado em pares de chave-valor, onde a chave √© uma string que identifica o valor correspondente. 
  Os valores podem ser do tipo string, number, object, array ou null. Existem algumas padroniza√ß√µes em cima do JSON, que s√£o mantidas por organiza√ß√µes internacionais. 
  Al√©m do formato chave-valor e dos tipos suportados que citamos, as principais padroniza√ß√µes s√£o:
  
   ‚Ä¢ Um dado JSON pode ser um Object. Para isso, usamos as chaves { } no in√≠cio da estrutura;
   ‚Ä¢ Um dado JSON pode ser um Array. Para isso, usamos os colchetes [ ] no in√≠cio da estrutura;
   ‚Ä¢ O JSON suporta caracteres Unicode, o que significa que ele pode ser usado para transmitir dados em diferentes idiomas e scripts;
   ‚Ä¢ A chave √© separada de seus valores correspondentes por dois pontos :;
   ‚Ä¢ A v√≠rgula , separa as entradas (no caso de objetos) ou os valores (em caso de arrays) no JSON.
*/

//Exemplo de JSON simples que √© um Object:
{
  "city": "Goi√¢nia",
  "temperature": 28,
  "humidity": 70,
  "conditions": "Ensolarado"
}

//Exemplo de JSON que √© um Array:
[
  {
    "product": "Arroz",
    "brand": "Tio Jo√£o",
    "price": 10.50
  },
  {
    "product": "Feij√£o",
    "brand": "Camil",
    "price": 8.99
  }
]

/*
 Diferen√ßas do JSON para objetos em JavaScript

  S√£o muito parecidos, mas um JSON tem algumas restri√ß√µes em compara√ß√£o com um objeto literal:

   1. O tipo Object do JavaScript pode receber uma fun√ß√£o como valor. J√° o JSON n√£o permite;
   2. JSON n√£o permite coment√°rios;
   3. Toda string precisa ser representada com aspas duplas " ";
   4. Toda chave do JSON precisa ser uma string.
*/

/*
JSON em arquivos de texto

  Outro ponto importante do JSON √© que ele tamb√©m √© uma padroniza√ß√£o de formato de arquivo. 
  Alguns cen√°rios onde arquivos JSON s√£o utilizados:

    1.  Arquivos de configura√ß√£o de projetos, 
    para salvar as informa√ß√µes em um formato simples em que o sistema possa ler e utilizar posteriormente;
    
    2.  Guardar dados de forma local. 
        Esse cen√°rio √© muito utilizado no desenvolvimento, 
        principalmente quando queremos trabalhar sem depender de um servi√ßo externo. 
        No exemplo citado no in√≠cio dessa li√ß√£o, poder√≠amos ter o JSON do supermercado no projeto e trabalhar em cima dele.

Os arquivos do tipo JSON utilizam a extens√£o .json para todos os sistemas em que s√£o utilizados, 
ent√£o sempre que voc√™ encontrar esta extens√£o em um projeto ou no gerenciador de arquivos do seu sistema operacional, 
vai saber do que se trata! üòú
*/